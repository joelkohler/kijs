Version 1.4.1
================================================================================
Neue Features
-------------
Showcase App (http://localhost/kijs/showcase/)
 - Zu jeder gui-Klasse gibt es eine Testseite
 - Weitere Testseiten können im Ordner kijs/showcase/js erstellt werden.
   sie werden automatisch eingebunden.
 - Das testApp sollte nun nicht mehr für Tests verwendet werden.
   Es existiert weiterhin als Beispiel-App.

kijs.Dom
 - Neue Funktionen: jsFileAdd(), jsFileHas(), jsFileRemove()
 - Die Funktion cssFileReplace() gibt neu ein Promise zurück

kijs.gui.field.ListView
 - Neuer Getter/Setter selectType

Änderungen
----------
kijs.gui.ApertureMask
 - Die Funktion _updatePosition() ist jetzt nicht mehr public.
   Stattdessen render() benutzen!

kijs.Ajax
 - Die Funktion request() gibt nicht mehr den XMLHttpRequest zurück, sondern ein Promise
 - Die callbackFn fn hat neu nur noch ein Argument { response: ..., request: ..., errorMsg: ... }
 - Die progressFn hat neu nur noch ein Argument { nodeEventName: 'onprogress', useCapture: false, nodeEvent: ..., context: ... }

kijs.Rpc
 - Die Funktion do(config) hat neu nur noch ein Argument (config). Die alten Argumente werden noch 
   eine Zeitlang unterstützt, sollten aber angepasst werden. In der Console wird eine DEPRECATED-Meldung angezeigt.
 - Bei der Funktion do() gibt es beim promise kein reject mehr. Falls es einen Fehler gab, 
   hat das Argument bei resolve eine Eigenschaft "errorMsg".
 - Die callbackFn fn hat neu nur noch ein Argument { response: ..., request: ... }

kijs.gui.Rpc
 - Die Funktion do(config) hat neu nur noch ein Argument (config). Die alten Argumente werden noch 
   eine Zeitlang unterstützt, sollten aber angepasst werden. In der Console wird eine DEPRECATED-Meldung angezeigt.
 - Bei der Funktion do() gibt es beim promise kein reject mehr. Falls es einen Fehler gab, 
   hat das Argument bei resolve eine Eigenschaft "errorMsg".


Version 1.3.1
================================================================================
Neue Features
-------------
 - RPC-Funktionen und MsgBox-Funktionen geben ein Promise (statt undefined) zurück,
   welches mit await abgewartet werden kann.



Version 1.3.0
================================================================================
Neue Features
-------------
Themes (light und dark)
 - Das theme kann im viewport über die config theme gesetzt werden:
   'light', 'dark' oder null=auto. Default=null
 - Falls kein Viewport verwendet wird, kann das Theme auch über
   kijs.Dom.themeSet(...) gesetzt werden.

Neues Design
 - Das Standard-Design wurde überarbeitet. Es werden etwas weniger Farben verwendet.
 - Die Farben sind etwas lebendiger.
 - Neue Schriftart: Roboto
 - Darkmode
 - Bitte die kijs.theme.default.css vor der bestehenden kijs.gui.css einbinden !!!!

Eigene Designs
 - Neu kann relativ einfach ein eigenes Design erstellt werden.
 - Es müssen neu immer zwei CSS-Dateien eingebunden werden. Zuerst die des
   gewünschten Designs (z.B. kijs.theme.default.css) und dann die kijs.gui.css.
- Designanpassungen sollten immer in der kijs.theme.xxx.css gemacht werden.
- Pro Design müssen immer beide Themes (light und dark) definiert werden.
- Ein kijs.theme.xxx.css ist in die zwei themes light und dark unterteilt.
  Darunter gibt es dann folgenden Aufbau:
    - Farbschema-Variablen mit den Akzentfarben und 10 Graustufen
    - Zuweisung der Farbschema-Variablen zu den Detailvariablen
    - Falls neben Farbanpassungen noch weitere Anpassungen nötig sind, können
      diese am Ende der Datei gemacht werden
- Das Design kann im betrieb durch austauschen der CSS-Datei gewechselt werden.
  Dafür kann die Funktion kijs.Dom.cssFileReplace(...) verwendet werden.
-- In der Test-App kann zwischen den Designs Standard, Alt und Joel gewechselt werden.

Neue Eigenschaft bei Fields: disableFlex
 - Ist disableFlex=true, dann wird das Feld nicht automatisch über die ganze breite
   angezeigt, dies macht Sinn bei Feldern mit fixer Breite.
 - Bei folgenden Feldern ist der Standardwert true:
   Checkbox, ChekboxGroup, Color, DateTime, Month, OptionGroup, Range, Switch
   Bei allen anderen false.
 - Bitte bei allen Fields mit disableFlex=true die Eigenschaft "width" entfernen !!!!!

kijs.gui.field.Switch
 - Neues Feld. Funktioniert wie eine Checkbox, sieht aber aus wie ein Slide-Button
 - Bitte neue Datei einbinden !!!!

Viele kleinere Designanpassungen



Version 1.2.7
================================================================================
Neue Features
-------------
 - der icon-column kann als icon ein iconMap übergeben werden
 - der icon-column kann ein tooltip definiert werden
 - Grid-Filter: Das Grid wird erst dann neu geladen, wenn alle Filter kein Fokus mehr haben


Fehlerbehebungen
----------------
 - kijs.gui.Window.visible = false blendet die Modal-Maske auch aus
 - LayerManager aktualisiert, wenn ein Element unrendert
 - kijs.gui.Mask übernimmt z-index von Target



Version 1.2.6
================================================================================
Änderungen
----------
 - kijs.gui.MenuButton entfernt. Es kann neu ein Menu in allen Buttons gemacht werden.
    > !!! ANPASSUNG !!! kijs.gui.MenuButton mit kijs.gui.Button ersetzen, elements in menuElements verschieben
 - iconChar: Neu sollte nicht mehr das HTML-Entity angegeben werden, sondern der Hex-Wert als Zahl.
    > FA-Icons sollten neu mit iconMap: 'kijs.iconMap.Fa.icon-name-hier' eingebunden werden.
 - kijs.getObjectFromNamespace() ersetzt mit kijs.getClassFromXtype()

Neue Klassen
-------------
 - kijs.gui.Menu für Kontextmenu und Dropdown-Menu



Version 1.2.5
================================================================================
Änderungen
----------
Grid
 - Der Parameter `decimalThousandSep` heisst neu gleich wie beim Nummernfeld: `thousandsSeparator`
 - Editable: Navigation mit Enter und Tab

Anderes
 - kijs.keys entfernt, da keyCodes deprecated sind und nicht mehr verwendet werden sollten.



Version 1.2.4
================================================================================
Grid
- Grid-Remote-Loading optimiert. Reload ohne resetData lädt nun alle Rows im Grid neu und selektiert die letzte Zeile erneut.
- Daten neu Laden (z.B. nach Filter change) setzt nun Scrolling zurück.
- Text-Filter lädt nun Daten nicht neu, wenn mit Enter gefiltert wird und danach das Change-Event beim Verlieren des Fokus neu laden will.
Combo
- onChange mit oldVal
Anderes
- Maske weniger schwarz
- File-Upload decodiert neu Pfad und Dateiname. !!! ANPASSUNG PHP NÖTIG (urldecode) !!!
- Tooltip für Tabellenspalten



Version 1.2.3
================================================================================

Fehlerbehebungen
----------------
 - Memofeld nach "disablen" nicht mehr schreibbar behoben



Version 1.2.0
================================================================================
Neue Klassen
-------------
 - kijs.gui.MonthPicker
 - kijs.gui.field.Month

Änderungen
----------
1. kijs.gui.DatePicker
    Überarbeitet

2. kijs.gui.field.DateTime
    Überarbeitet. Viele Eigenschaften verändert.
    Hat neu eine mode Eigenschaft ('range', 'week', 'date', 'dateTime', 'time')

3. Neue Funktionen in kijs.Date
- kijs.Date.diff(date1, date2);
- kijs.Date.getSqlDate(date);
- kijs.Date.getSqlDateTime(date);
- kijs.Date.getSqlTime(time);

4. Neue Eigenschaft "values" bei Formularfeldern
   Das FormPanel setzt nun nicht mehr die value-Eigenschaft der Felder, sondern
   übergibt den ganzen Record an die neue "values" Eigenschaft.
   Das Feld nimmt sich selbstständig die benötigten Werte aus dem Record.
   Siehe dazu die Modulvariable "this._valuesMapping" im kijs.gui.field.Field und kijs.gui.field.DateTime

   Beim Abfragen der Werte wird nun auch die values Eigenschaft der einzelnen Felder abgefragt.

5. Anpassungen an SpinBox
   Fehler beim ermitteln der Breite der SpinBox behoeben

   Wenn eine SpinBox eine weitere SpinBox enthält und in der Untergeordneten auf etwas geklickt wird,
   wird nun die übergeordnete SpinBox nicht mehr geschlossen.
   Das gleiche Problem bestand bereits früher beim kijs.gui.MenuButton. Den code dafür habe ich dort nun entfernt,$
   weil die Spinbox das nun selbstständig löst.

6. "kijs.getGetParameter" -> nun "kijs.Navigator.getGetParameter"

7. default htmlDisplayType vom kijs.gui.field.Display ist neu "code".

8. Neue Funktion für Browser-Sprache zu ermitteln: kijs.Navigator.getLanguageId

Anpassungen, die an Projekten vorgenommen werden müssen
-------------------------------------------------------
1. Eigenschaft "trimValue" umbenennen zu "valueTrim"

Betrifft:
- kijs.gui.field.Display
- kijs.gui.field.Memo
- kijs.gui.field.Password
- kijs.gui.field.Text


2. Eigenschaften "selectDateInPast" und "selectDateInFuture" gibt es nicht mehr.
Bitte dafür neu die Eigenschaften "minValue" und "maxValue" verwenden.
Beispiel: minValue:new Date()

Betrifft:
   - kijs.gui.field.DateTime
   - kijs.gui.DatePicker

3. "kijs.getGetParameter" -> ändern zu "kijs.Navigator.getGetParameter"



Version 1.1.3
================================================================================
* toolTip in tooltip umbenannt (Muss in Projekten ersetzt werden, toolTip = DEPRECATED)
* kijs.Grafic in kijs.Graphic umbenannt (Muss in Projekten ersetzt werden!)
* Neue Funktionen für Manipulation von Farben in kijs.Graphic



Version 1.1.2
================================================================================
* Dateien werden neu in der "files.json" aufgeführt.
  Es gibt verschiedene Module, deren zugehörigen Dateien aufgeführt sind.



Version 1.0.1
================================================================================
Release kgweb
